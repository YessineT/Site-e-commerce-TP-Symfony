{% extends 'base.html.twig' %}

{% block title %}Checkout â€“ GameHub{% endblock %}

{% block body %}
{#    <style>#}
{#        /* animation lÃ©gÃ¨re au hover sur les cartes */#}
{#        .card:hover {#}
{#            transform: scale(1.01);#}
{#            transition: transform 0.2s ease-in-out;#}
{#        }#}
{#    </style>#}
    <style>
        .animatable:hover {
            transform: scale(1.01);
            transition: transform 0.2s ease-in-out;
        }

        /* champ actif (focus) */
        .checkout-form .form-control:focus {
            transform: scale(1.02);
            transition: transform 0.2s ease-in-out;
            border-color: #536dfe;        /* renforce la couleur au focus */
            box-shadow: 0 0 0 .2rem rgba(83,109,254,.25);
        }
    </style>
    <style>
        /* === Style spÃ©cifique au formulaire de checkout === */
        .checkout-form {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1rem 2rem;
            align-items: start;
            margin-bottom: 1.5rem;
        }

        .checkout-form .form-group {
            display: flex;
            flex-direction: column;
        }

        .checkout-form .form-group label {
            font-weight: 600;
            margin-bottom: .25rem;
        }

        .checkout-form .form-control {
            width: 100%;
            padding: .75rem;
            border-radius: .5rem;
            border: 1px solid #ced4da;
            transition: border-color .2s ease;
        }

        .checkout-form .form-control:focus {
            border-color: #536dfe;
            outline: none;
            box-shadow: 0 0 0 .2rem rgba(83,109,254,.25);
        }
    </style>

    <div class="container py-5">
        <h1 class="mb-4 text-center fw-bold">ðŸ›’ Finalisez votre commande</h1>
        <div class="row">
            <div class="col-lg-7 mb-4">
                <div class="card shadow border-0">
                    <div class="card-header bg-primary text-white">
                        <h5 class="mb-0">ðŸ§¾ Informations de facturation</h5>
                    </div>
                    <div class="card-body p-4">

                        {{ form_start(checkoutForm, {attr: {class: 'checkout-form'}}) }}

                        <div class="form-group">
                            {{ form_label(checkoutForm.firstName) }}
                            {{ form_widget(checkoutForm.firstName, {attr: {'class': 'form-control'}}) }}
                        </div>

                        <div class="form-group">
                            {{ form_label(checkoutForm.lastName) }}
                            {{ form_widget(checkoutForm.lastName, {attr: {'class': 'form-control'}}) }}
                        </div>

                        <div class="form-group">
                            {{ form_label(checkoutForm.email) }}
                            {{ form_widget(checkoutForm.email, {attr: {'class': 'form-control'}}) }}
                        </div>

                        <div class="form-group">
                            {{ form_label(checkoutForm.phone) }}
                            {{ form_widget(checkoutForm.phone, {attr: {'class': 'form-control'}}) }}
                        </div>

{#                        <div class="form-group">#}
{#                            {{ form_label(checkoutForm.address) }}#}
{#                            {{ form_widget(checkoutForm.address, {attr: {'class': 'form-control'}}) }}#}
{#                        </div>#}

                        <div class="form-group">
                            {{ form_label(checkoutForm.country) }}
                            {{ form_widget(checkoutForm.country, {attr: {'class': 'form-control'}}) }}
                        </div>

                        <div class="form-group">
                            {{ form_label(checkoutForm.city) }}
                            {{ form_widget(checkoutForm.city, {attr: {'class': 'form-control'}}) }}
                        </div>

{#                        <div class="form-group">#}
{#                            {{ form_label(checkoutForm.zipCode) }}#}
{#                            {{ form_widget(checkoutForm.zipCode, {attr: {'class': 'form-control'}}) }}#}
{#                        </div>#}

                        <div class="form-group" style="grid-column: 1 / -1">
                            <button type="submit" class="btn btn-primary btn-lg w-100">
                                âœ… Enregistrer mes informations
                            </button>
                        </div>

                        {{ form_end(checkoutForm) }}

                    </div>
                </div>
            </div>

            {# â€¦ bloc parent, en-tÃªte, etc. â€¦ #}

            <div class="col-lg-5">
                {# === RÃ‰CAPITULATIF DE LA COMMANDE === #}
                <div class="card shadow border-0 mb-4 animatable">
                    <div class="card-header bg-secondary text-white">
                        <h5 class="mb-0">ðŸ§¾ RÃ©capitulatif de la commande</h5>
                    </div>
                    <div class="card-body">
                        {% for item in cart.items %}
                            <div class="d-flex justify-content-between mb-2">
                                <span>{{ item.game.title }}</span>
                                <span>{{ item.game.price|number_format(2, '.', ',') }} â‚¬</span>
                            </div>
                        {% endfor %}

                        <hr>

                        <div class="d-flex justify-content-between">
                            <span>Sous-total</span>
                            <span>{{ cart.total|number_format(2, '.', ',') }} â‚¬</span>
                        </div>
                        <div class="d-flex justify-content-between">
                            <span>TVA (10%)</span>
                            <span>{{ (cart.total * 0.1)|number_format(2, '.', ',') }} â‚¬</span>
                        </div>

                        <hr>

                        <div class="d-flex justify-content-between fs-5 fw-bold text-success">
                            <span>Total TTC</span>
                            <span>{{ (cart.total * 1.1)|number_format(2, '.', ',') }} â‚¬</span>
                        </div>
                    </div>
                </div>

                {# === PAIEMENT SÃ‰CURISÃ‰ === #}
                <div class="card shadow border-0 animatable">
                    <div class="card-header bg-success text-white">
                        <h5 class="mb-0">ðŸ’³ Paiement sÃ©curisÃ©</h5>
                    </div>
                    <div class="card-body">
                        <p class="mb-3">Vos jeux seront disponibles immÃ©diatement aprÃ¨s paiement.</p>
                        {# ADD the PayPal button container #}
                        <div id="paypal-button-container"></div>
                    </div>
                </div>
            </div>
        </div>

        {# Script paypall #}
        {# Load the PayPal JS SDK with your client ID and USD currency #}
        <script src="https://www.paypal.com/sdk/js?client-id={{ PAYPAL_CLIENT_ID }}&currency=USD"></script>
        <script>
            paypal.Buttons({
                createOrder: function(data, actions) {
                    return fetch('{{ path("paypal_order_create", {"orderId": order.id}) }}', {
                        method: 'POST'
                    })
                        .then(res => {
                            if (!res.ok) throw new Error('Failed to create PayPal order');
                            return res.json();
                        })
                        .then(json => {
                            console.log('ðŸ‘‰ createOrder JSON:', json);
                            if (json.error) {
                                alert('Erreur lors de la crÃ©ation de la commande PayPal : ' + json.error);
                                throw new Error(json.error);
                            }
                            return json.id;  // this is the PayPal Order ID
                        });
                },

                onApprove: function(data, actions) {
                    // Build the capture URL directly in JS
                    const captureUrl = '/paypal/order/capture/' + data.orderID;

                    return fetch(captureUrl, {
                        method: 'POST'
                    })
                        .then(res => {
                            if (!res.ok) throw new Error('Failed to capture PayPal order');
                            return res.json();
                        })
                        .then(json => {
                            if (json.status === 'success') {
                                // Redirect to your backend verify route, passing the PayPal Order ID as "token"
                                window.location.href = '{{ path("payment_paypal_success", {"orderId": order.id}) }}?token=' + data.orderID;
                            } else {
                                alert('Ã‰chec de la capture du paiement.');
                            }
                        })
                        .catch(err => {
                            console.error('Capture Error:', err);
                            alert('Une erreur est survenue lors de la capture du paiement.');
                        });
                },

                onError: function(err) {
                    console.error('PayPal SDK Error:', err);
                    alert('Une erreur est survenue avec PayPal.');
                }
            }).render('#paypal-button-container');
        </script>


    </div>
{% endblock %}